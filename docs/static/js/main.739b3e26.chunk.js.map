{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","search","setSearch","onSubmit","e","preventDefault","trim","length","cats","type","onChange","target","value","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","card","animate__animated","animate__fadeIn","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAgCeA,EA7BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAeA,OACE,8BACE,sBAAMC,SAXW,SAACC,GACpBA,EAAEC,iBAEEJ,EAAOK,OAAOC,OAAS,IACzBR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAAsBO,OACpCN,EAAU,MAMV,SACE,uBAAOO,KAAK,OAAOC,SAhBJ,SAACN,GACpBF,EAAUE,EAAEO,OAAOC,QAe4BA,MAAOX,S,gCCtB7CY,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,0FAC0EC,UAC7FH,GAFmB,sBAKFI,MAAMF,GALJ,cAKfG,EALe,gBAMEA,EAAKC,OANP,uBAMbC,EANa,EAMbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAGtCa,QAAQC,IAAIR,GAfS,kBAgBdA,GAhBc,4CAAH,sDCYLS,EATK,SAAC,GAAuB,EAArBN,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAChC,OACE,sBAAKgB,UAAU,yCAAf,UACE,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QC2BKS,EA7BC,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAEjB,ECJ0B,SAACA,GAC3B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNe,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACR1B,EAAQC,GAAU0B,MAAK,SAACC,GAAD,OACrBH,EAAS,CACPjB,KAAMoB,EACNL,SAAS,SAGZ,CAACtB,IAEGuB,EDX2BK,CAAa5B,GAAjCa,EAAd,EAAQN,KAAce,EAAtB,EAAsBA,QAQtB,OACE,gCACE,oBAAIO,MAAI,EAACC,mBAAiB,EAACC,iBAAe,EAA1C,SACG/B,IAGFsB,GACC,mBAAGJ,UAAU,wCAAb,wBAGF,qBAAKA,UAAU,YAAf,SACGL,EAAOJ,KAAI,SAACC,GACX,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEDxBqB,EAtBM,WACnB,MAAoC9C,mBAAS,CAAC,KAA9C,mBAAO+C,EAAP,KAAmBhD,EAAnB,KAOA,OACE,gCACE,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACGgD,EAAWxB,KAAI,SAACT,GACf,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCd/BkC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,U","file":"static/js/main.739b3e26.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst AddCategory = ({ setCategories }) => {\n  const [search, setSearch] = useState(\"\");\n\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (search.trim().length > 2) {\n      setCategories((cats) => [search, ...cats]);\n      setSearch(\"\");\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" onChange={handleChange} value={search} />\n      </form>\n    </div>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=39X8zYlkC9cp7JIy0xA7x3MpSEN6JC7m&q=${encodeURI(\n    category\n  )}&limit=10`;\n\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n  console.log(gifs);\n  return gifs;\n};\n","import React from \"react\";\nimport \"../index.css\";\n\nconst GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n\nexport default GifGridItem;\n","import React from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport GifGridItem from \"./GifGridItem\";\n\nconst GifGrid = ({ category }) => {\n  // const [images, setImages] = useStsate([]);\n  const { data: images, loading } = useFetchGifs(category);\n\n  // useEffect(() => {\n  //   getGifs(category).then((imgs) => setImages(imgs));\n  // }, [category]);\n\n  //   getGifs();\n\n  return (\n    <div>\n      <h3 card animate__animated animate__fadeIn>\n        {category}\n      </h3>\n\n      {loading && (\n        <p className=\"card animate__animated animate__flash\">Loading...</p>\n      )}\n\n      <div className=\"card-grid\">\n        {images.map((img) => {\n          return <GifGridItem key={img.id} {...img} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default GifGrid;\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) =>\n      setState({\n        data: imgs,\n        loading: false,\n      })\n    );\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState([\"\"]);\n\n  const handleAdd = () => {\n    // setCategories([\"Hunter X Hunter\", ...categories]);\n    setCategories((cats) => [\"Hunter X Hunter\", ...cats]);\n  };\n\n  return (\n    <div>\n      <h2>Gif-Expert-App</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ol>\n        {categories.map((category) => {\n          return <GifGrid key={category} category={category} />;\n        })}\n      </ol>\n    </div>\n  );\n};\n\nexport default GifExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}